#cloud-config

# Install required packages
packages:
 - wireguard
 - net-tools
 - iptables

# Create new admin user
users:
  - name: ${admin_username}
    shell: /bin/bash
    ssh_authorized_keys:
      - %{ if !enable_ssh_access }command="/opt/get_wireguard_status" %{ endif }${admin_ssh_pubkey}
    sudo: ALL=(ALL) NOPASSWD:ALL

write_files:
  # Create Wireguard config file
  # NOTE: private key will be created and set by runcmd
  - path: /etc/wireguard/wg0.conf
    owner: root:root
    permissions: "0600"
    content: |
      [Interface]
      Address = 10.77.67.1
      ListenPort = ${wg_port}
      PrivateKey = WG_SRV_PRI
      PostUp = /etc/wireguard/postup.sh
      PreDown = /etc/wireguard/predown.sh
      SaveConfig = false

      [Peer]
      PublicKey = ${wg_client_pubkey}
      PresharedKey = ${wg_psk}
      AllowedIPs = 10.77.67.2

  # Add WireGuard postup and predown scripts
  - path: /etc/wireguard/postup.sh
    owner: root:root
    permissions: "0700"
    append: true
    content: |
      iptables -t nat -I POSTROUTING 1 -s 10.77.67.2 -o ${public_iface} -j MASQUERADE
      iptables -I INPUT 1 -i wg0 -j ACCEPT
      iptables -I FORWARD 1 -i ${public_iface} -o wg0 -j ACCEPT
      iptables -I FORWARD 1 -i wg0 -o ${public_iface} -j ACCEPT
      iptables -I INPUT 1 -i ${public_iface} -p udp --dport ${wg_port} -j ACCEPT
  - path: /etc/wireguard/predown.sh
    owner: root:root
    permissions: "0700"
    append: true
    content: |
      iptables -t nat -D POSTROUTING -s 10.77.67.2 -o ${public_iface} -j MASQUERADE
      iptables -D INPUT -i wg0 -j ACCEPT
      iptables -D FORWARD -i ${public_iface} -o wg0 -j ACCEPT
      iptables -D FORWARD -i wg0 -o ${public_iface} -j ACCEPT
      iptables -D INPUT -i ${public_iface} -p udp --dport ${wg_port} -j ACCEPT

  # Also configure SSHd
  - path: /etc/ssh/sshd_config
    owner: root:root
    permissions: "0644"
    append: true
    content: |
      PasswordAuthentication no
      PubkeyAuthentication yes
      AuthenticationMethods publickey
      PermitRootLogin no
      AllowUsers ${admin_username}
      Port ${ssh_port}

  # Add script that allows a remote user to read pubkey
  - path: /opt/get_wireguard_status
    owner: root:root
    permissions: "0755"
    append: true
    content: |
      #!/bin/bash
      set -e -o pipefail
      sudo cloud-init status --wait >/dev/null
      sudo wg >/dev/null
      sudo cat /etc/wireguard/public.key

# Setup Wireguard config and start
runcmd:
 # Setup firewall, just in case cloud provider firewall fails/is disabled
 - sudo ufw allow ${ssh_port}/tcp
 - sudo ufw allow ${wg_port}/udp
%{ for extra_port in extra_open_ports ~}
 - sudo ufw allow ${extra_port}/tcp
%{ endfor ~}
 - sudo ufw enable
 # Ensure iptables works for ssh, which might be a different port
 - sudo bash -c 'iptables -D INPUT -i ${public_iface} -p tcp --dport 22 -j ACCEPT || true'
 - sudo iptables -I INPUT 1 -i ${public_iface} -p tcp --dport ${ssh_port} -j ACCEPT
 # Add IPtables rules for anything else
%{ for extra_port in extra_open_ports ~}
 - sudo iptables -I INPUT 1 -i ${public_iface} -p tcp --dport ${extra_port} -j ACCEPT
%{ endfor ~}
 # Restart sshd to pick up new config
 - sudo systemctl restart ssh
 # Enable IP Forwarding and create wiereguard keys
 - sudo bash -c "echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf && sysctl -p"
 - sudo bash -c "wg genkey > /etc/wireguard/private.key && chmod go= /etc/wireguard/private.key"
 - sudo bash -c "cat /etc/wireguard/private.key | wg pubkey > /etc/wireguard/public.key && chmod go= /etc/wireguard/public.key"
 # Setup wireguard config and start service
 - sudo bash -c 'WG_PRI=$(cat /etc/wireguard/private.key); sed -i "s@WG_SRV_PRI@$WG_PRI@g" /etc/wireguard/wg0.conf'
 - sudo systemctl enable wg-quick@wg0.service
 - sudo systemctl start wg-quick@wg0.service
