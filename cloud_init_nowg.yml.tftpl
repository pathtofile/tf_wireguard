#cloud-config

# Install required packages
packages:
 - net-tools
 - iptables

# Create new admin user
users:
  - name: ${admin_username}
    shell: /bin/bash
    ssh_authorized_keys:
      - ${admin_ssh_pubkey}
    sudo: ALL=(ALL) NOPASSWD:ALL

write_files:
  # Configure SSHd
  - path: /etc/ssh/sshd_config
    owner: root:root
    permissions: "0644"
    append: true
    content: |
      PasswordAuthentication no
      PubkeyAuthentication yes
      AuthenticationMethods publickey
      PermitRootLogin no
      AllowUsers ${admin_username}
      Port ${ssh_port}

# Setup Config and start
runcmd:
 # Setup firewall, just in case cloud provider firewall fails/is disabled
 - sudo ufw allow ${ssh_port}/tcp
%{ for extra_port in extra_open_ports ~}
 - sudo ufw allow ${extra_port}/tcp
%{ endfor ~}
 - sudo ufw enable
 # Ensure iptables works for ssh, which might be a different port
 - sudo bash -c 'iptables -D INPUT -i ${public_iface} -p tcp --dport 22 -j ACCEPT || true'
 - sudo iptables -I INPUT 1 -i ${public_iface} -p tcp --dport ${ssh_port} -j ACCEPT
 # Add IPtables rules for anything else
%{ for extra_port in extra_open_ports ~}
 - sudo iptables -I INPUT 1 -i ${public_iface} -p tcp --dport ${extra_port} -j ACCEPT
%{ if forward_ports ~}
 - sudo iptables -t nat -A PREROUTING -p tcp --dport ${extra_port} -j DNAT --to-destination 10.77.67.2:${extra_port}
 - sudo iptables -t nat -A POSTROUTING -p tcp -d 10.77.67.2 --dport ${extra_port} -j SNAT --to-source $(hostname -i)
%{ endif ~}
%{ endfor ~}
 # Restart sshd to pick up new config
 - sudo systemctl restart ssh
%{ for extra_command in extra_commands ~}
 - ${extra_command}
%{ endfor ~}
